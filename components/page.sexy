<div class="container content">
	<p>
		Так как Sexy нацелен на работу с SSR для достижения максимальной производительности на клиенте, был реализовн фреймворк для реализации серверного рендеринга.
	</p>
	<p>
		Основной задачей этого фреймворка является рендеринг пользовательского интерфейса в условиях абстракции от клиент-серверной архитектуры.
	</p>
	<p>
		Наша цель — создать фреймворк настолько гибкий, чтобы его можно было использовать и как основу, и как дополнение к уже существующим проектам на Node.js.
	</p>
	<p>
		Sexy содержит все необходимые конфигурационные заготовки, позволяющие сделать разработку приложений с серверным рендерингом более приятной.
	</p>
	<h3 class="title is-4">
		Особенности:
	</h3>
	<ol type="1">
		<li>Написание Sexy-компонентов</li>
		<li>Автоматическое разделение кода</li>
		<li>Серверный рендеринг</li>
		<li>Мощная система маршрутизации с Асинхронными данными</li>
		<li>Обслуживание статических файлов</li>
		<li>Транспиляция ES2015+</li>
		<li>Сборка и минификация JS & CSS</li>
		<li>Управление элементами в блоке head (title, meta и др.)</li>
		<li>Пре-процессоры: SASS, LESS, Stylus, и др.</li>
	</ol>
	<h3 class="title is-4">
		Sexy-server использует:
	</h3>
	<ol type="1">
		<li>Sexy-framework для компонентов</li>
		<li>Для роутинга navigo (lightweight router)</li>
	</ol>
	<p>
		Общий размер составляет всего лишь 5.5 kb gzip.
	</p>
	<p>
		Под капотом мы используем webpack с sexy-loader и babel-loader для сборки, разделения и минимизации вашего кода.
	</p>
</div>
